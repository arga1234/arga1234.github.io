{"version":3,"sources":["store/reducers/rootReducer.js","store/store.js","store/actions/rootAction.js","Query/pokemonQuery.js","components/ChildPokemonList/Pagination.js","components/helper/Handle.js","components/helper/PokemonType.js","static/image/not-available.png","helper/imagePokemon.js","components/Pokemon.js","components/ChildPokemonList/PokemonToDisplay.js","components/ChildPokemonList/SearchBox.js","components/PokemonList.js","components/ChildPokemonDetail/TabContent.js","helper/preFetchImage.js","helper/randomData.js","components/PokemonDetail.js","components/ChildMyPokemonList/MyPokemonToDisplay.js","components/MyPokemonList.js","components/ChildCatchPokemon/CatchButton.js","components/ChildCatchPokemon/RandomImage.js","components/ChildCatchPokemon/SaveSection.js","components/ChildCatchPokemon/Result.js","components/ChildCatchPokemon/TimerPreparation.js","components/CatchPokemon.js","helper/catchPokemon.js","static/image/mypokeball.png","components/Header.js","components/Footer.js","components/App.js","reportWebVitals.js","index.js"],"names":["initialState","allPokemonStore","myPokemonStore","randomData","page","pokemonDetail","undefined","enableToCatch","rootReducer","state","action","type","data","filter","item","uniqeId","persistConfig","key","storage","localforage","persistedReducer","persistReducer","store","createStore","applyMiddleware","persistor","persistStore","setPage","setPokemonDetail","setEnableToCatch","getData","url","a","fetch","response","json","datas","pokemonQuery","gql","Pagination","pagination","allPokemon","setPagination","defineDataToDisplay","searchKey","searchResult","onRequest","n","newPage","offsetVal","limit","limiter","listAllPokemon","totalPage","offset","className","aria-hidden","role","onClick","Handle","props","message","PokemonType","pokemonType","map","x","name","imagePokemon","pokeImage","sprites","other","dream_world","front_default","frontDef","NotAvailable","Pokemon","pokemon","image","types","charAt","toUpperCase","slice","src","alt","PokemonToDisplay","list","fetchStatus","history","useHistory","dispatch","useDispatch","TransitionGroup","index","CSSTransition","timeout","classNames","push","String","SearchBox","setSearchResult","setSearchKey","useState","search","setSearch","SearchKeyLabel","searchKeyProps","searchKeyVal","onSubmit","e","Math","ceil","length","preventDefault","placeholder","value","onChange","target","toLocaleLowerCase","GET_POKEMONS","PokemonList","setPokemonAll","pokemenToDisplay","setPokemonToDisplay","count","alreadyMounted","firstTimeMounted","setFetchStatus","useQuery","variables","loading","error","limitVal","i","promise","forEach","Promise","all","then","res","catch","firstMounted","paginationObj","pokemonObj","pokemons","results","setAllPokemonAction","useEffect","TabContent","contentValue","useSelector","baseFontColor","StatsIcon","stats","aboutContent","label","height","weight","species","style","marginRight","cellSpacing","cellPadding","abilities","ability","moves","move","stat","base_stat","preFetchImage","arr","resolve","loadedImage","loadImage","Image","onload","console","log","allPokemonFiltered","randomDataList","reject","listOfRandomIndex","randomIndex","floor","random","find","el","y","z","probability","respond","Error","PokemonDetail","content","setContent","setLoading","catchPokemon","CatchButton","loadingVal","baseColor","tabClick","width","alignSelf","MyPokemonToDisplay","goToPokemonDetail","deleteMyPokemon","myPokemonAll","imagePoke","stopPropagation","color","nickName","MyPokemonList","limitValNew","newOffset","sign","Mounted","detail","removeMyPokemonAction","play","catchNow","Content","display","RandomImage","setImage","imageInterval","setInterval","clearInterval","flexDirection","objectFit","SaveSection","save","setNickName","catchAgain","saveNickName","catchAgainStatus","textAlign","marginTop","Result","selectedPokemon","TimerPreparation","timerPreparation","setTimerPreparation","setPlay","setTimeout","CatchPokemon","setSave","setSelectedPokemon","setCatchAgainStatus","interval","pokemonToSave","Object","entries","uuidv4","catchedPokemon","chances","sum","chance","rand","Header","myPokemon","PageName","id","goBack","listen","location","pathname","mypokeball","Footer","pageVal","Logo","routeVal","link","App","routes","path","Component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","httpLink","createHttpLink","uri","client","ApolloClient","cache","InMemoryCache","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b7b32de5.chunk.js","sourcesContent":["const initialState = {\r\n  allPokemonStore: [],\r\n  myPokemonStore: [],\r\n  randomData: [],\r\n  page: 'Home',\r\n  pokemonDetail: undefined,\r\n  enableToCatch: true,\r\n}\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'SET_MY_POKEMON':\r\n      return {\r\n        ...state,\r\n        myPokemonStore: [...state.myPokemonStore, action.data],\r\n      }\r\n    case 'REMOVE_MY_POKEMON':\r\n      return {\r\n        ...state,\r\n        myPokemonStore: state.myPokemonStore.filter(\r\n          (item) => item.uniqeId !== action.data,\r\n        ),\r\n      }\r\n    case 'SET_ALL_POKEMON':\r\n      return {\r\n        ...state,\r\n        allPokemonStore: action.data,\r\n      }\r\n    case 'SET_PAGE':\r\n      return {\r\n        ...state,\r\n        page: action.data,\r\n      }\r\n    case 'SET_POKEMON_DETAIL':\r\n      return {\r\n        ...state,\r\n        pokemonDetail: action.data,\r\n      }\r\n    case 'SET_RANDOM_DATA':\r\n      return {\r\n        ...state,\r\n        randomData: action.data,\r\n      }\r\n    case 'SET_ENABLE_TO_CATCH':\r\n      return {\r\n        ...state,\r\n        enableToCatch: action.data,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport default rootReducer\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport { persistStore, persistReducer } from 'redux-persist' // imports from redux-persist\r\nimport localforage from 'localforage'\r\n// import storage from 'redux-persist/lib/storage' // defaults to localStorage for web\r\n\r\nimport rootReducer from './reducers/rootReducer' // Root reducer\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage: localforage,\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\nconst store = createStore(persistedReducer, applyMiddleware())\r\n\r\nconst persistor = persistStore(store)\r\n\r\nexport { store, persistor }\r\n","const setAllPokemonAction = (data) => ({\r\n  type: 'SET_ALL_POKEMON',\r\n  data,\r\n})\r\n\r\nconst setMyPokemonAction = (data) => ({\r\n  type: 'SET_MY_POKEMON',\r\n  data,\r\n})\r\n\r\nconst removeMyPokemonAction = (data) => ({\r\n  type: 'REMOVE_MY_POKEMON',\r\n  data,\r\n})\r\n\r\nconst setPage = (data) => ({\r\n  type: 'SET_PAGE',\r\n  data,\r\n})\r\n\r\nconst setPokemonDetail = (data) => ({\r\n  type: 'SET_POKEMON_DETAIL',\r\n  data,\r\n})\r\n\r\nconst setRandomData = (data) => ({\r\n  type: 'SET_RANDOM_DATA',\r\n  data,\r\n})\r\n\r\nconst setEnableToCatch = (data) => ({\r\n  type: 'SET_ENABLE_TO_CATCH',\r\n  data,\r\n})\r\n\r\nconst getData = async (url) => {\r\n  const response = await fetch(url)\r\n  const datas = await response.json()\r\n  return datas\r\n}\r\n\r\nexport {\r\n  setPage,\r\n  setMyPokemonAction,\r\n  removeMyPokemonAction,\r\n  setAllPokemonAction,\r\n  setPokemonDetail,\r\n  setEnableToCatch,\r\n  getData,\r\n  setRandomData,\r\n}\r\n","import { gql } from '@apollo/client'\r\n\r\nconst pokemonQuery = gql`\r\n  query pokemons($limit: Int, $offset: Int) {\r\n    pokemons(limit: $limit, offset: $offset) {\r\n      count\r\n      next\r\n      previous\r\n      status\r\n      message\r\n      results {\r\n        url\r\n        name\r\n        image\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default pokemonQuery\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { FaChevronLeft, FaChevronRight } from 'react-icons/fa'\r\n\r\nconst Pagination = ({\r\n  pagination,\r\n  allPokemon,\r\n  setPagination,\r\n  defineDataToDisplay,\r\n  searchKey,\r\n  searchResult,\r\n}) => {\r\n  const onRequest = (n) => {\r\n    const newPage = pagination.page + n\r\n    const offsetVal = (newPage - 1) * pagination.limit\r\n    const limiter = offsetVal + pagination.limit\r\n    let listAllPokemon = allPokemon\r\n    if (searchKey !== '') listAllPokemon = searchResult\r\n\r\n    if (!(newPage <= 0) && !(newPage > pagination.totalPage)) {\r\n      setPagination({\r\n        ...pagination,\r\n        page: newPage,\r\n        offset: offsetVal,\r\n      })\r\n      defineDataToDisplay(offsetVal, limiter, listAllPokemon)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"pagination\">\r\n      <span\r\n        className=\"button cp\"\r\n        aria-hidden=\"true\"\r\n        role=\"button\"\r\n        onClick={() => onRequest(-1)}\r\n      >\r\n        <FaChevronLeft />\r\n      </span>\r\n      <div className=\"page\">\r\n        {pagination.page} / {pagination.totalPage}\r\n      </div>\r\n      <span\r\n        className=\"button cp\"\r\n        aria-hidden=\"true\"\r\n        role=\"button\"\r\n        onClick={() => onRequest(1)}\r\n      >\r\n        <FaChevronRight />\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\nPagination.propTypes = {\r\n  pagination: PropTypes.object,\r\n  allPokemon: PropTypes.array,\r\n  setPagination: PropTypes.func,\r\n  defineDataToDisplay: PropTypes.func,\r\n  searchKey: PropTypes.string,\r\n  searchResult: PropTypes.array,\r\n}\r\n\r\nexport default Pagination\r\n","import React from 'react'\r\n\r\nconst Handle = (props) => {\r\n  // eslint-disable-next-line react/prop-types\r\n  const { message } = props\r\n  return (\r\n    <div className=\"helper-page center-message\">\r\n      <p>{message}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Handle\r\n","import React from 'react'\r\n\r\nconst PokemonType = (type) => {\r\n  const { pokemonType } = type\r\n  return pokemonType.map((x) => (\r\n    <span className=\"type-label\" key={`type-${x.type.name}`}>\r\n      {x.type.name}\r\n    </span>\r\n  ))\r\n}\r\n\r\nexport default PokemonType\r\n","export default __webpack_public_path__ + \"static/media/not-available.0e049a38.png\";","import NotAvailable from '../static/image/not-available.png'\r\nexport default function imagePokemon(store) {\r\n  let pokeImage = store.sprites.other.dream_world.front_default\r\n\r\n  if (pokeImage === null) {\r\n    const frontDef = store.sprites.front_default\r\n    if (frontDef) {\r\n      pokeImage = frontDef\r\n      return pokeImage\r\n    }\r\n    pokeImage = NotAvailable\r\n    return pokeImage\r\n  }\r\n\r\n  return pokeImage\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport PokemonType from './helper/PokemonType'\r\nimport imagePokemon from '../helper/imagePokemon'\r\n\r\nconst Pokemon = (props) => {\r\n  const { pokemon } = props\r\n  const image = imagePokemon(pokemon)\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className={`cp item ${\r\n          pokemon.types[0].type.name ? `${pokemon.types[0].type.name}` : ''\r\n        }`}\r\n      >\r\n        <h3 className=\"m-0\">\r\n          {pokemon.name.charAt(0).toUpperCase() + pokemon.name.slice(1)}\r\n        </h3>\r\n\r\n        <div className=\"type-label-wrapper\">\r\n          <PokemonType pokemonType={pokemon.types} />\r\n        </div>\r\n\r\n        <img className=\"image-item\" src={image} alt={pokemon.name}></img>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nPokemon.propTypes = {\r\n  pokemon: PropTypes.object,\r\n}\r\n\r\nexport default Pokemon\r\n","/* eslint-disable no-param-reassign */\r\nimport React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\nimport Handle from '../helper/Handle'\r\nimport Pokemon from '../Pokemon'\r\n\r\nconst PokemonToDisplay = ({ list, setPokemonDetail, fetchStatus }) => {\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const goToPokemonDetail = (detail) => {\r\n    dispatch(setPokemonDetail(detail))\r\n    history.push(`/pokemon-detail`)\r\n  }\r\n\r\n  try {\r\n    if (fetchStatus) return <Handle message=\"Getting Pokemon ...\" />\r\n\r\n    return (\r\n      <div className=\"p-t-25 p-b-80\">\r\n        <TransitionGroup>\r\n          {list.map((item, index) => (\r\n            <CSSTransition\r\n              key={String(index)}\r\n              timeout={500}\r\n              classNames=\"pokemonitem\"\r\n            >\r\n              <div\r\n                role=\"button\"\r\n                aria-hidden=\"true\"\r\n                onClick={() => goToPokemonDetail(item, index)}\r\n              >\r\n                <Pokemon pokemon={item} />\r\n              </div>\r\n            </CSSTransition>\r\n          ))}\r\n        </TransitionGroup>\r\n      </div>\r\n    )\r\n  } catch {\r\n    return <Handle message=\"Error Occured\" />\r\n  }\r\n}\r\n\r\nPokemonToDisplay.propTypes = {\r\n  list: PropTypes.array,\r\n  setPokemonDetail: PropTypes.func,\r\n  fetchStatus: PropTypes.bool,\r\n}\r\n\r\nexport default PokemonToDisplay\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { FaSearch } from 'react-icons/fa'\r\n\r\nconst SearchBox = ({\r\n  pagination,\r\n  allPokemon,\r\n  setPagination,\r\n  defineDataToDisplay,\r\n  setSearchResult,\r\n  searchKey,\r\n  setSearchKey,\r\n}) => {\r\n  const [search, setSearch] = useState('')\r\n\r\n  const SearchKeyLabel = (searchKeyProps) => {\r\n    const { searchKeyVal } = searchKeyProps\r\n    if (searchKeyVal !== '') {\r\n      return <p className=\"result-search\">Result For: {searchKey}</p>\r\n    }\r\n\r\n    return null\r\n  }\r\n\r\n  const onSearch = (e) => {\r\n    const newPage = 1\r\n    const offsetVal = (newPage - 1) * pagination.limit\r\n    const limiter = offsetVal + pagination.limit\r\n    const listAllPokemon = allPokemon.filter(\r\n      (item) => item.name.search(search) !== -1,\r\n    )\r\n    setSearchResult(listAllPokemon)\r\n    const totalPage = Math.ceil(listAllPokemon.length / pagination.limit)\r\n\r\n    setPagination({\r\n      ...pagination,\r\n      page: newPage,\r\n      totalPage: totalPage === 0 ? 1 : totalPage,\r\n    })\r\n\r\n    defineDataToDisplay(offsetVal, limiter, listAllPokemon)\r\n\r\n    setSearchKey(search)\r\n    e.preventDefault()\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <p className=\"m-t-b-10 description\">Search for pokemon by their name</p>\r\n      <form onSubmit={onSearch} className=\"searchBoxWrapper\">\r\n        <input\r\n          className=\"search-box\"\r\n          placeholder=\"What pokemon are you looking for ?\"\r\n          type=\"text\"\r\n          value={search}\r\n          onChange={(e) => setSearch(e.target.value.toLocaleLowerCase())}\r\n        />\r\n        <button type=\"submit\" className=\"search-button cp\">\r\n          <FaSearch />\r\n        </button>\r\n      </form>\r\n      <SearchKeyLabel searchKeyVal={searchKey} />\r\n    </div>\r\n  )\r\n}\r\n\r\nSearchBox.propTypes = {\r\n  pagination: PropTypes.object,\r\n  allPokemon: PropTypes.array,\r\n  setPagination: PropTypes.func,\r\n  defineDataToDisplay: PropTypes.func,\r\n  setSearchResult: PropTypes.func,\r\n  searchKey: PropTypes.string,\r\n  setSearchKey: PropTypes.func,\r\n}\r\nexport default SearchBox\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useQuery } from '@apollo/client'\r\nimport { useDispatch } from 'react-redux'\r\nimport {\r\n  setPokemonDetail,\r\n  getData,\r\n  setAllPokemonAction,\r\n  setPage,\r\n} from '../store/actions/rootAction'\r\nimport pokemonQuery from '../Query/pokemonQuery'\r\nimport { SearchBox, Pagination, PokemonToDisplay } from './ChildPokemonList'\r\nimport Handle from './helper/Handle'\r\n\r\nconst GET_POKEMONS = pokemonQuery\r\nconst PokemonList = () => {\r\n  const [allPokemon, setPokemonAll] = useState([])\r\n\r\n  const [pokemenToDisplay, setPokemonToDisplay] = useState([])\r\n\r\n  const [pagination, setPagination] = useState({\r\n    count: 0,\r\n    totalPage: 0,\r\n    page: 1,\r\n    offset: 0,\r\n    limit: 5,\r\n    alreadyMounted: false,\r\n    firstTimeMounted: true,\r\n  })\r\n\r\n  const [searchKey, setSearchKey] = useState('')\r\n\r\n  const [searchResult, setSearchResult] = useState([])\r\n\r\n  const [fetchStatus, setFetchStatus] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const { loading, error, data } = useQuery(GET_POKEMONS, {\r\n    variables: {\r\n      limit: 1500,\r\n      offset: 0,\r\n    },\r\n  })\r\n\r\n  const defineDataToDisplay = (offsetVal, limitVal, listAllPokemon) => {\r\n    const list = []\r\n    setPokemonToDisplay([])\r\n    for (let i = offsetVal; i < limitVal; i += 1) {\r\n      if (listAllPokemon[i]) {\r\n        list.push(listAllPokemon[i])\r\n      }\r\n      if (i === limitVal - 1) {\r\n        setFetchStatus(true)\r\n        const promise = []\r\n        list.forEach((x) => {\r\n          promise.push(getData(x.url))\r\n        })\r\n\r\n        Promise.all(promise)\r\n          .then((res) => {\r\n            setFetchStatus(false)\r\n            setPokemonToDisplay(res)\r\n          })\r\n          .catch(() => {})\r\n      }\r\n    }\r\n  }\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const firstMounted = (paginationObj, pokemonObj) => {\r\n    const { offset, limit } = paginationObj\r\n    const limiter = offset + limit\r\n    const listAllPokemon = pokemonObj.pokemons.results\r\n    if (listAllPokemon.length !== 0) {\r\n      setPagination({\r\n        ...paginationObj,\r\n        firstTimeMounted: false,\r\n        totalPage: Math.ceil(pokemonObj.pokemons.count / paginationObj.limit),\r\n        count: pokemonObj.pokemons.count,\r\n      })\r\n\r\n      setPokemonAll(listAllPokemon)\r\n\r\n      dispatch(setAllPokemonAction(listAllPokemon))\r\n\r\n      defineDataToDisplay(offset, limiter, listAllPokemon)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(setPage('Home'))\r\n    if (data) {\r\n      if (pagination.firstTimeMounted && !pagination.alreadyMounted) {\r\n        firstMounted(pagination, data)\r\n      }\r\n    }\r\n  }, [data, dispatch, firstMounted, pagination])\r\n  if (loading) return <Handle message=\"Loading the data\" />\r\n  if (error) return <Handle message={`Error! ${error.message}`} />\r\n\r\n  return (\r\n    <div className=\"poke-list-wrapper\">\r\n      <div className=\"sticky-top\">\r\n        <SearchBox\r\n          pagination={pagination}\r\n          allPokemon={allPokemon}\r\n          searchKey={searchKey}\r\n          setPagination={setPagination}\r\n          defineDataToDisplay={defineDataToDisplay}\r\n          setSearchResult={setSearchResult}\r\n          setSearchKey={setSearchKey}\r\n        />\r\n      </div>\r\n      <PokemonToDisplay\r\n        list={pokemenToDisplay}\r\n        setPokemonDetail={setPokemonDetail}\r\n        fetchStatus={fetchStatus}\r\n      />\r\n      <div className=\"sticky-bot\">\r\n        <Pagination\r\n          pagination={pagination}\r\n          allPokemon={allPokemon}\r\n          searchKey={searchKey}\r\n          searchResult={searchResult}\r\n          setPagination={setPagination}\r\n          defineDataToDisplay={defineDataToDisplay}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PokemonList\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport {\r\n  FaInfoCircle,\r\n  FaStar,\r\n  FaAnchor,\r\n  FaTint,\r\n  FaShieldAlt,\r\n  FaBattleNet,\r\n  FaAtom,\r\n  FaAudible,\r\n} from 'react-icons/fa'\r\nimport PropTypes from 'prop-types'\r\nimport PokemonType from '../helper/PokemonType'\r\n\r\nconst TabContent = ({ contentValue }) => {\r\n  const store = useSelector((state) => state.pokemonDetail)\r\n  const baseFontColor = `${store.types[0].type.name}-color`\r\n  const StatsIcon = (stats) => {\r\n    const { name } = stats\r\n    if (name === 'hp') return <FaTint className={baseFontColor} />\r\n    if (name === 'attack') return <FaBattleNet className={baseFontColor} />\r\n    if (name === 'defense') return <FaShieldAlt className={baseFontColor} />\r\n    if (name === 'special-attack') return <FaAtom className={baseFontColor} />\r\n    if (name === 'special-defense')\r\n      return <FaAnchor className={baseFontColor} />\r\n    if (name === 'speed') return <FaAudible className={baseFontColor} />\r\n    return <FaStar className={baseFontColor} />\r\n  }\r\n\r\n  if (contentValue === 'about') {\r\n    const aboutContent = [\r\n      { label: 'Height', value: `${store.height / 10} m` },\r\n      { label: 'Weight', value: `${store.weight} kg` },\r\n      {\r\n        label: 'Species',\r\n        value:\r\n          store.species.name.charAt(0).toUpperCase() +\r\n          store.species.name.slice(1),\r\n      },\r\n    ]\r\n    return (\r\n      <div className=\"detail\">\r\n        <p className={baseFontColor}>\r\n          <FaInfoCircle style={{ marginRight: '5px' }} />{' '}\r\n          <b>Basic Information</b>\r\n        </p>\r\n        <table cellSpacing=\"0\" cellPadding=\"0\">\r\n          <tbody>\r\n            {aboutContent.map((x) => (\r\n              <tr key={x.label}>\r\n                <td className=\"tdAbout\">\r\n                  <b>{x.label}</b>\r\n                </td>\r\n                <td className=\"tdAbout\">{x.value}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n\r\n        <p className={baseFontColor}>\r\n          <FaAtom style={{ marginRight: '5px' }} /> <b>Types</b>\r\n        </p>\r\n        <PokemonType pokemonType={store.types} />\r\n\r\n        <p className={baseFontColor}>\r\n          <FaStar style={{ marginRight: '5px' }} /> <b>Abilities</b>\r\n        </p>\r\n        {store.abilities.map((x) => (\r\n          <span className=\"type-label\" key={`ability-${x.ability.name}`}>\r\n            {x.ability.name}\r\n          </span>\r\n        ))}\r\n\r\n        <p className={baseFontColor}>\r\n          <FaAnchor style={{ marginRight: '5px' }} /> <b>Moves</b>\r\n        </p>\r\n        {store.moves.map((x, index) => {\r\n          if (index < 5) {\r\n            return (\r\n              <p key={`move-${x.move.name}`}>\r\n                - {x.move.name.charAt(0).toUpperCase() + x.move.name.slice(1)}\r\n              </p>\r\n            )\r\n          }\r\n          return null\r\n        })}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (contentValue === 'stats') {\r\n    return (\r\n      <div className=\"detail grid-container\">\r\n        {store.stats.map((x) => (\r\n          <div className=\"statsItem\" key={x.stat.name}>\r\n            <StatsIcon name={x.stat.name} />\r\n            <div className=\"statsLabel\">\r\n              <p>\r\n                <b>\r\n                  {x.stat.name.charAt(0).toUpperCase() + x.stat.name.slice(1)}\r\n                </b>\r\n              </p>\r\n              <span>{x.base_stat}</span>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return <div></div>\r\n}\r\n\r\nTabContent.propTypes = {\r\n  contentValue: PropTypes.string,\r\n}\r\n\r\nexport default TabContent\r\n","/* eslint-disable consistent-return */\r\nimport imagePokemon from './imagePokemon'\r\nconst preFetchImage = (arr) =>\r\n  new Promise((resolve) => {\r\n    let loadedImage = 0\r\n    const loadImage = (url) => {\r\n      const image = new Image()\r\n      image.src = url\r\n      image.onload = () => {\r\n        if (loadedImage === arr.length - 1) {\r\n          return resolve(true)\r\n        }\r\n        loadedImage += 1\r\n        console.log(loadImage(imagePokemon(arr[loadedImage])))\r\n        loadImage(imagePokemon(arr[loadedImage]))\r\n      }\r\n    }\r\n\r\n    loadImage(imagePokemon(arr[loadedImage]))\r\n  })\r\n\r\nexport default preFetchImage\r\n","/* eslint-disable consistent-return */\r\n/* eslint-disable no-param-reassign */\r\nimport { setRandomData, getData } from '../store/actions/rootAction'\r\nimport preFetchImage from './preFetchImage'\r\nconst randomData = (dispatch, history, store) => {\r\n  const targetProbability = 0.5 * 11 // 50% from 11 random data\r\n  const otherProbability = (11 - targetProbability) / 10\r\n  const allPokemonFiltered = store.allPokemon.filter(\r\n    (x) => x.name !== store.pokemon.name,\r\n  )\r\n  const randomDataList = []\r\n  let x = 0\r\n  return new Promise((resolve, reject) => {\r\n    while (x < 10) {\r\n      const listOfRandomIndex = []\r\n      const randomIndex = Math.floor(Math.random() * allPokemonFiltered.length)\r\n      const checkAvailableIndex = listOfRandomIndex.find(\r\n        (el) => el === randomIndex,\r\n      )\r\n\r\n      if (checkAvailableIndex === undefined) {\r\n        listOfRandomIndex.push(randomIndex)\r\n        randomDataList.push(allPokemonFiltered[randomIndex])\r\n        x += 1\r\n      }\r\n\r\n      if (x === 10) {\r\n        const promise = []\r\n        randomDataList.forEach((y) => {\r\n          promise.push(getData(y.url))\r\n        })\r\n        Promise.all(promise)\r\n          .then(async (res) => {\r\n            res.forEach((z) => {\r\n              z.target = false\r\n              z.probability = otherProbability\r\n            })\r\n\r\n            store.pokemon.probability = targetProbability\r\n            store.pokemon.target = true\r\n            res.push(store.pokemon)\r\n            dispatch(setRandomData(res))\r\n            await preFetchImage(res).then((respond) => {\r\n              if (respond) {\r\n                resolve(respond)\r\n              }\r\n              reject(new Error('Error Occured'))\r\n            })\r\n          })\r\n          .catch(() => {})\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nexport default randomData\r\n","/* eslint-disable no-param-reassign */\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { setPage } from '../store/actions/rootAction'\r\nimport TabContent from './ChildPokemonDetail/TabContent'\r\nimport Handle from './helper/Handle'\r\nimport imagePokemon from '../helper/imagePokemon'\r\nimport randomData from '../helper/randomData'\r\n\r\nconst PokemonDetail = () => {\r\n  const dispatch = useDispatch()\r\n  const [content, setContent] = useState('about')\r\n  const [loading, setLoading] = useState(false)\r\n  const store = useSelector((state) => ({\r\n    allPokemon: state.allPokemonStore,\r\n    pokemon: state.pokemonDetail,\r\n    enableToCatch: state.enableToCatch,\r\n  }))\r\n  const history = useHistory()\r\n\r\n  const catchPokemon = async () => {\r\n    setLoading(true)\r\n    if (store.allPokemon.length === 0) {\r\n      history.push('/')\r\n      return\r\n    }\r\n\r\n    randomData(dispatch, history, store)\r\n      .then((response) => {\r\n        if (response) history.push('/catch-pokemon')\r\n      })\r\n      .catch((e) => <Handle message={e.message} />)\r\n  }\r\n\r\n  const CatchButton = ({ loadingVal }) => {\r\n    if (loadingVal) {\r\n      return (\r\n        <span\r\n          className={`cp catch-button ${store.enableToCatch ? '' : 'hide'}`}\r\n        >\r\n          Loading\r\n        </span>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <span\r\n        role=\"button\"\r\n        aria-hidden=\"true\"\r\n        onClick={() => catchPokemon()}\r\n        className={`cp catch-button ${store.enableToCatch ? '' : 'hide'}`}\r\n      >\r\n        Catch It\r\n      </span>\r\n    )\r\n  }\r\n\r\n  CatchButton.propTypes = {\r\n    loadingVal: PropTypes.bool,\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(setPage('Pokemon Detail'))\r\n  }, [dispatch])\r\n\r\n  try {\r\n    const baseColor = store.pokemon.types[0].type.name\r\n    const baseFontColor = `${store.pokemon.types[0].type.name}-color`\r\n\r\n    const tabClick = (type) => {\r\n      setContent(type)\r\n    }\r\n\r\n    const pokeImage = imagePokemon(store.pokemon)\r\n    return (\r\n      <div>\r\n        <div className={`pokemonType ${baseColor}`}>\r\n          <img\r\n            style={{ width: '100px', height: '100px', alignSelf: 'center' }}\r\n            className=\"image\"\r\n            src={pokeImage}\r\n            alt={store.pokemon.name}\r\n          ></img>\r\n          <div className=\"description\">\r\n            <h3>\r\n              {store.pokemon.name.charAt(0).toUpperCase() +\r\n                store.pokemon.name.slice(1)}\r\n            </h3>\r\n            <CatchButton loadingVal={loading} />\r\n          </div>\r\n        </div>\r\n        <div className=\"detailWrapper\">\r\n          <div className=\"tab\">\r\n            <span\r\n              role=\"button\"\r\n              aria-hidden=\"true\"\r\n              onClick={() => tabClick('about')}\r\n              className={`cp ${content === 'about' ? baseFontColor : ''}`}\r\n            >\r\n              About\r\n            </span>\r\n            <span\r\n              role=\"button\"\r\n              aria-hidden=\"true\"\r\n              onClick={() => tabClick('stats')}\r\n              className={`cp ${content === 'stats' ? baseFontColor : ''}`}\r\n            >\r\n              Stats\r\n            </span>\r\n          </div>\r\n          <div className=\"tab-content\">\r\n            <TabContent contentValue={content} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  } catch {\r\n    return <Handle message=\"Error Occured\" />\r\n  }\r\n}\r\n\r\nexport default PokemonDetail\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useSelector } from 'react-redux'\r\nimport imagePokemon from '../../helper/imagePokemon'\r\nconst MyPokemonToDisplay = ({\r\n  store,\r\n  goToPokemonDetail,\r\n  deleteMyPokemon,\r\n  pagination,\r\n}) => {\r\n  const myPokemonAll = useSelector((state) => state.myPokemonStore)\r\n  return (\r\n    <div className=\"my-poke-list-wrapper p-b-80\">\r\n      <p className=\"m-t-b-10 description\">\r\n        {`You now have ${myPokemonAll.length} ${\r\n          myPokemonAll.length === 1 ? 'pokemon' : 'pokemons'\r\n        }`}\r\n      </p>\r\n      <div className=\"grid-container\">\r\n        {store.map((item, index) => {\r\n          const imagePoke = imagePokemon(item)\r\n          return (\r\n            <div\r\n              className={`my-pokemon-item ${item.types[0].type.name}`}\r\n              role=\"button\"\r\n              aria-hidden=\"true\"\r\n              key={String(index)}\r\n              onClick={() => goToPokemonDetail(item)}\r\n            >\r\n              <span\r\n                role=\"button\"\r\n                aria-hidden=\"true\"\r\n                className=\"delete-button\"\r\n                onClick={(e) => {\r\n                  e.stopPropagation()\r\n                  deleteMyPokemon(item.uniqeId, pagination)\r\n                }}\r\n              >\r\n                x\r\n              </span>\r\n              <img alt={item.name} src={imagePoke}></img>\r\n              <p style={{ color: 'white' }}>{item.nickName}</p>\r\n              <span style={{ color: 'white' }}>\r\n                <b>{item.name.charAt(0).toUpperCase() + item.name.slice(1)}</b>\r\n              </span>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nMyPokemonToDisplay.propTypes = {\r\n  store: PropTypes.array,\r\n  goToPokemonDetail: PropTypes.func,\r\n  deleteMyPokemon: PropTypes.func,\r\n  pagination: PropTypes.object,\r\n}\r\n\r\nexport default MyPokemonToDisplay\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport {\r\n  setPokemonDetail,\r\n  removeMyPokemonAction,\r\n  setPage,\r\n} from '../store/actions/rootAction'\r\nimport { Pagination, SearchBox } from './ChildPokemonList'\r\nimport MyPokemonToDisplay from './ChildMyPokemonList/MyPokemonToDisplay'\r\nimport Handle from './helper/Handle'\r\nconst MyPokemonList = () => {\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const myPokemonStore = useSelector((state) => state.myPokemonStore)\r\n\r\n  const [pokemenToDisplay, setPokemonToDisplay] = useState([])\r\n\r\n  const [searchKey, setSearchKey] = useState('')\r\n\r\n  const [searchResult, setSearchResult] = useState([])\r\n\r\n  const [pagination, setPagination] = useState({\r\n    count: 0,\r\n    totalPage: 0,\r\n    page: 1,\r\n    offset: 0,\r\n    limit: 6,\r\n    alreadyMounted: false,\r\n    firstTimeMounted: true,\r\n  })\r\n\r\n  const goToPokemonDetail = (detail) => {\r\n    dispatch(setPokemonDetail(detail))\r\n    dispatch(setPage('Pokemon Detail'))\r\n    history.push(`/pokemon-detail`)\r\n  }\r\n\r\n  const deleteMyPokemon = (uniqeId, paginationObj) => {\r\n    dispatch(removeMyPokemonAction(uniqeId))\r\n    let data = myPokemonStore.filter((item) => item.uniqeId !== uniqeId)\r\n    if (searchKey !== '') {\r\n      data = data.filter((item) => item.name.search(searchKey) !== -1)\r\n    }\r\n    defineDataToDisplay(paginationObj.offset, paginationObj.limit, data)\r\n  }\r\n\r\n  const defineDataToDisplay = (offsetVal, limitVal, listAllPokemon) => {\r\n    const list = []\r\n    setPokemonToDisplay([])\r\n    if (listAllPokemon[offsetVal] !== undefined) {\r\n      const limitValNew = offsetVal + limitVal\r\n      for (let i = offsetVal; i < limitValNew; i += 1) {\r\n        if (listAllPokemon[i]) {\r\n          list.push(listAllPokemon[i])\r\n        }\r\n        if (i === limitValNew - 1) {\r\n          setPokemonToDisplay(list)\r\n        }\r\n      }\r\n    } else {\r\n      const newOffset = listAllPokemon.length - limitVal\r\n      if (Math.sign(newOffset) !== -1) {\r\n        const limitValNew = newOffset + limitVal\r\n        for (let i = newOffset; i < limitValNew; i += 1) {\r\n          if (listAllPokemon[i]) {\r\n            list.push(listAllPokemon[i])\r\n          }\r\n          if (i === limitValNew - 1) {\r\n            setPagination({\r\n              page: pagination.page - 1,\r\n              offset: newOffset,\r\n              limit: 6,\r\n              totalPage: Math.ceil(listAllPokemon.length / pagination.limit),\r\n            })\r\n            setPokemonToDisplay(list)\r\n          }\r\n        }\r\n      } else {\r\n        setPokemonToDisplay([])\r\n      }\r\n    }\r\n  }\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const Mounted = (paginationObj, pokemonObj) => {\r\n    const { offset, limit } = paginationObj\r\n    const limiter = offset + limit\r\n    const listAllPokemon = pokemonObj\r\n    if (listAllPokemon.length !== 0) {\r\n      setPagination({\r\n        ...paginationObj,\r\n        firstTimeMounted: false,\r\n        totalPage: Math.ceil(pokemonObj.length / paginationObj.limit),\r\n        count: pokemonObj.length,\r\n      })\r\n\r\n      defineDataToDisplay(offset, limiter, listAllPokemon)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (myPokemonStore) {\r\n      if (pagination.firstTimeMounted && !pagination.alreadyMounted) {\r\n        Mounted(pagination, myPokemonStore)\r\n      }\r\n    }\r\n  }, [myPokemonStore, Mounted, pagination, dispatch])\r\n  try {\r\n    if (myPokemonStore.length === 0)\r\n      return <Handle message=\"You dont have any Pokemon\" />\r\n    return (\r\n      <div>\r\n        <div className=\"sticky-top p-lr-20\">\r\n          <SearchBox\r\n            pagination={pagination}\r\n            allPokemon={myPokemonStore}\r\n            searchKey={searchKey}\r\n            setPagination={setPagination}\r\n            defineDataToDisplay={defineDataToDisplay}\r\n            setSearchResult={setSearchResult}\r\n            setSearchKey={setSearchKey}\r\n          />\r\n        </div>\r\n        <MyPokemonToDisplay\r\n          goToPokemonDetail={goToPokemonDetail}\r\n          store={pokemenToDisplay}\r\n          deleteMyPokemon={deleteMyPokemon}\r\n          pagination={pagination}\r\n        />\r\n        <div className=\"sticky-bot\">\r\n          <Pagination\r\n            pagination={pagination}\r\n            allPokemon={myPokemonStore}\r\n            searchKey={searchKey}\r\n            searchResult={searchResult}\r\n            setPagination={setPagination}\r\n            defineDataToDisplay={defineDataToDisplay}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  } catch {\r\n    return <Handle message=\"Error Occured\" />\r\n  }\r\n}\r\n\r\nexport default MyPokemonList\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nconst CatchButton = ({ play, catchNow }) => {\r\n  const Content = () => {\r\n    if (play) {\r\n      return (\r\n        <div className=\"catch-pokemon\">\r\n          <button\r\n            className=\"catch-button-pokemon cp\"\r\n            style={{ display: 'block' }}\r\n            type=\"button\"\r\n            onClick={() => catchNow()}\r\n          >\r\n            Chatch Now\r\n          </button>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return null\r\n  }\r\n\r\n  return <Content />\r\n}\r\n\r\nCatchButton.propTypes = {\r\n  play: PropTypes.bool,\r\n  catchNow: PropTypes.func,\r\n}\r\n\r\nexport default CatchButton\r\n","import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useSelector } from 'react-redux'\r\nimport NotAvailable from '../../static/image/not-available.png'\r\nconst RandomImage = ({ play }) => {\r\n  const randomData = useSelector((state) => state.randomData)\r\n  const [image, setImage] = useState(NotAvailable)\r\n  // eslint-disable-next-line consistent-return\r\n  useEffect(() => {\r\n    if (play && randomData.length !== 0) {\r\n      const imageInterval = setInterval(() => {\r\n        const index = Math.floor(Math.random() * 11)\r\n        if (index) {\r\n          const imagePoke =\r\n            randomData[index].sprites.other.dream_world.front_default\r\n\r\n          if (imagePoke) {\r\n            setImage(imagePoke)\r\n          } else {\r\n            const frontDef = randomData[index].sprites.front_default\r\n            if (frontDef) {\r\n              setImage(frontDef)\r\n            } else {\r\n              setImage(NotAvailable)\r\n            }\r\n          }\r\n        }\r\n      }, 100)\r\n      return () => clearInterval(imageInterval)\r\n    }\r\n  })\r\n  if (!play) {\r\n    return null\r\n  }\r\n  return (\r\n    <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n      <img\r\n        style={{ width: '80px', height: '80px', objectFit: 'cover' }}\r\n        src={image}\r\n        alt={image}\r\n      ></img>\r\n      <p></p>\r\n    </div>\r\n  )\r\n}\r\n\r\nRandomImage.propTypes = {\r\n  play: PropTypes.bool,\r\n}\r\n\r\nexport default RandomImage\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst SaveSection = ({\r\n  save,\r\n  nickName,\r\n  setNickName,\r\n  catchAgain,\r\n  saveNickName,\r\n  catchAgainStatus,\r\n}) => {\r\n  if (save) {\r\n    if (catchAgainStatus) {\r\n      return (\r\n        <div style={{ textAlign: 'center', marginTop: '10px' }}>\r\n          <button className=\"catch-button-pokemon\" type=\"button\">\r\n            Loading ...\r\n          </button>\r\n        </div>\r\n      )\r\n    }\r\n    return (\r\n      <div style={{ textAlign: 'center' }}>\r\n        <p>Save Success</p>\r\n        <button\r\n          className=\"catch-button-pokemon cp\"\r\n          type=\"button\"\r\n          onClick={() => catchAgain()}\r\n        >\r\n          Catch Again\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n  return (\r\n    <div style={{ marginTop: '10px' }}>\r\n      <form onSubmit={saveNickName} className=\"flex-column\">\r\n        <input\r\n          className=\"nickname-box\"\r\n          placeholder=\"Nickname ?\"\r\n          type=\"text\"\r\n          value={nickName}\r\n          onChange={(e) => setNickName(e.target.value)}\r\n        />\r\n        <button type=\"submit\" className=\"nickname-button\">\r\n          Save\r\n        </button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nSaveSection.propTypes = {\r\n  save: PropTypes.bool,\r\n  nickName: PropTypes.string,\r\n  setNickName: PropTypes.func,\r\n  catchAgain: PropTypes.func,\r\n  saveNickName: PropTypes.func,\r\n  catchAgainStatus: PropTypes.bool,\r\n}\r\nexport default SaveSection\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport SaveSection from './SaveSection'\r\nimport imagePokemon from '../../helper/imagePokemon'\r\nconst Result = ({\r\n  play,\r\n  selectedPokemon,\r\n  save,\r\n  nickName,\r\n  setNickName,\r\n  catchAgain,\r\n  saveNickName,\r\n  catchAgainStatus,\r\n}) => {\r\n  if (!play && selectedPokemon !== null) {\r\n    const image = imagePokemon(selectedPokemon)\r\n\r\n    return (\r\n      <div className=\"result\">\r\n        <img src={image} alt={selectedPokemon.name}></img>\r\n        <div className=\"result-text\">\r\n          <p>{selectedPokemon.target ? 'Congratulation' : 'Sorry'}</p>\r\n          <span>\r\n            You Get{' '}\r\n            {selectedPokemon.name.charAt(0).toUpperCase() +\r\n              selectedPokemon.name.slice(1)}\r\n          </span>\r\n          <SaveSection\r\n            save={save}\r\n            nickName={nickName}\r\n            setNickName={setNickName}\r\n            catchAgain={catchAgain}\r\n            saveNickName={saveNickName}\r\n            catchAgainStatus={catchAgainStatus}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  return null\r\n}\r\n\r\nResult.propTypes = {\r\n  play: PropTypes.bool,\r\n  selectedPokemon: PropTypes.object,\r\n  save: PropTypes.bool,\r\n  nickName: PropTypes.string,\r\n  setNickName: PropTypes.func,\r\n  catchAgain: PropTypes.func,\r\n  saveNickName: PropTypes.func,\r\n  catchAgainStatus: PropTypes.bool,\r\n}\r\n\r\nexport default Result\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst TimerPreparation = ({\r\n  timerPreparation,\r\n  setTimerPreparation,\r\n  setPlay,\r\n}) => {\r\n  if (timerPreparation === 0) {\r\n    // eslint-disable-next-line func-names\r\n    setTimeout(function () {\r\n      setTimerPreparation(-1)\r\n      setPlay(true)\r\n    }, 1000)\r\n    return <h2 className=\"timerPreparationGo\">Go</h2>\r\n  }\r\n  if (timerPreparation === -1) {\r\n    return null\r\n  }\r\n  return <p className=\"timer\">{timerPreparation}</p>\r\n}\r\n\r\nTimerPreparation.propTypes = {\r\n  timerPreparation: PropTypes.number,\r\n  setTimerPreparation: PropTypes.func,\r\n  setPlay: PropTypes.func,\r\n}\r\n\r\nexport default TimerPreparation\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport {\r\n  CatchButton,\r\n  RandomImage,\r\n  Result,\r\n  TimerPreparation,\r\n} from './ChildCatchPokemon'\r\nimport Handle from './helper/Handle'\r\nimport catchPokemon from '../helper/catchPokemon'\r\nimport randomData from '../helper/randomData'\r\nimport { setMyPokemonAction, setPage } from '../store/actions/rootAction'\r\n\r\nconst CatchPokemon = () => {\r\n  const [timerPreparation, setTimerPreparation] = useState(3)\r\n  const [play, setPlay] = useState(false)\r\n  const [nickName, setNickName] = useState('')\r\n  const [save, setSave] = useState(false)\r\n  const [selectedPokemon, setSelectedPokemon] = useState(null)\r\n  const [catchAgainStatus, setCatchAgainStatus] = useState(false)\r\n  const store = useSelector((state) => ({\r\n    allPokemon: state.allPokemonStore,\r\n    pokemon: state.pokemonDetail,\r\n    randomData: state.randomData,\r\n  }))\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n\r\n  const catchNow = () => {\r\n    setPlay(false)\r\n    const probability = []\r\n    store.randomData.forEach((x, i) => {\r\n      probability.push(x.probability)\r\n\r\n      if (i === store.randomData.length - 1) {\r\n        const catchedPokemon = store.randomData[catchPokemon(probability)]\r\n        setSelectedPokemon(catchedPokemon)\r\n      }\r\n    })\r\n  }\r\n\r\n  const saveNickName = (e) => {\r\n    const pokemonToSave = {}\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const [key, value] of Object.entries(selectedPokemon)) {\r\n      pokemonToSave[key] = value\r\n    }\r\n    pokemonToSave.nickName = nickName\r\n    pokemonToSave.uniqeId = uuidv4()\r\n    dispatch(setMyPokemonAction(pokemonToSave))\r\n    setSave(true)\r\n    e.preventDefault()\r\n  }\r\n\r\n  const catchAgain = () => {\r\n    setCatchAgainStatus(true)\r\n    randomData(dispatch, history, store)\r\n      .then((response) => {\r\n        if (response) {\r\n          setNickName('')\r\n          setSave(false)\r\n          setSelectedPokemon(null)\r\n          setCatchAgainStatus(false)\r\n          setTimerPreparation(3)\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        throw new Error(e)\r\n      })\r\n  }\r\n\r\n  // eslint-disable-next-line consistent-return\r\n  useEffect(() => {\r\n    if (timerPreparation !== -1) {\r\n      const interval = setInterval(() => {\r\n        if (timerPreparation !== 0) {\r\n          setTimerPreparation(timerPreparation - 1)\r\n        } else {\r\n          dispatch(setPage('Catch Pokemon'))\r\n          clearInterval(interval)\r\n        }\r\n      }, 1000)\r\n      return () => clearInterval(interval)\r\n    }\r\n  })\r\n  try {\r\n    return (\r\n      <div>\r\n        <div className=\"helper-page center-message\">\r\n          <TimerPreparation\r\n            timerPreparation={timerPreparation}\r\n            setTimerPreparation={setTimerPreparation}\r\n            setPlay={setPlay}\r\n          />\r\n          <RandomImage play={play} />\r\n        </div>\r\n        <Result\r\n          play={play}\r\n          catchAgainStatus={catchAgainStatus}\r\n          catchAgain={catchAgain}\r\n          saveNickName={saveNickName}\r\n          setNickName={setNickName}\r\n          nickName={nickName}\r\n          save={save}\r\n          selectedPokemon={selectedPokemon}\r\n        />\r\n        <CatchButton play={play} catchNow={catchNow} />\r\n      </div>\r\n    )\r\n  } catch (e) {\r\n    return <Handle message={e.message} />\r\n  }\r\n}\r\nexport default CatchPokemon\r\n","export default function catchPokemon(chances) {\r\n  let sum = 0\r\n  chances.forEach((chance) => {\r\n    sum += chance\r\n  })\r\n  const rand = Math.random()\r\n  let chance = 0\r\n  for (let i = 0; i < chances.length; i += 1) {\r\n    chance += chances[i] / sum\r\n    if (rand < chance) {\r\n      return i\r\n    }\r\n  }\r\n\r\n  return -1\r\n}\r\n","export default __webpack_public_path__ + \"static/media/mypokeball.3a90cf96.png\";","import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { FaArrowLeft } from 'react-icons/fa'\r\nimport { setPage, setEnableToCatch } from '../store/actions/rootAction'\r\nimport mypokeball from '../static/image/mypokeball.png'\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n\r\n  const store = useSelector((state) => ({\r\n    myPokemon: state.myPokemonStore,\r\n    page: state.page,\r\n  }))\r\n\r\n  const goBack = () => {\r\n    history.goBack()\r\n  }\r\n\r\n  const PageName = () => {\r\n    if (store.page === 'Pokemon Detail' || store.page === 'Catch Pokemon') {\r\n      return (\r\n        <div id=\"left\" className=\"navigation cp\">\r\n          <FaArrowLeft\r\n            style={{ marginRight: '10px' }}\r\n            onClick={() => goBack()}\r\n          />\r\n          <span className=\"m-0\">{store.page}</span>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div id=\"left\" className=\"navigation\">\r\n        <span className=\"m-0\">{store.page}</span>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    history.listen((location) => {\r\n      const page = {}\r\n      page['/'] = 'Home'\r\n      page['/my-pokemon-list'] = 'My Pokemon'\r\n      page['/pokemon-detail'] = 'Pokemon Detail'\r\n      page['/catch-pokemon'] = 'Catch Pokemon'\r\n      dispatch(setPage(page[location.pathname]))\r\n\r\n      if (location.pathname === '/my-pokemon-list') {\r\n        dispatch(setEnableToCatch(false))\r\n      } else if (location.pathname === '/') {\r\n        dispatch(setEnableToCatch(true))\r\n      }\r\n    })\r\n  }, [dispatch, history])\r\n\r\n  return (\r\n    <div className=\"header sticky\">\r\n      <PageName />\r\n      <div id=\"right\" className=\"navigation\">\r\n        <img alt=\"poke-ball\" src={mypokeball}></img>\r\n        <span className=\"m-0\">{store.myPokemon.length}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { FaHome, FaUser } from 'react-icons/fa'\r\nimport { setPage } from '../store/actions/rootAction'\r\nexport default function Footer() {\r\n  const page = useSelector((state) => state.page)\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const route = ['/', '/my-pokemon-list']\r\n  const pageVal = {}\r\n  pageVal['/'] = 'Home'\r\n  pageVal['/my-pokemon-list'] = 'My Pokemon'\r\n\r\n  const goTo = (routeVal) => {\r\n    dispatch(setPage(pageVal[routeVal]))\r\n    history.push(routeVal)\r\n  }\r\n\r\n  const Logo = (routeVal) => {\r\n    const { link } = routeVal\r\n    if (link === '/') return <FaHome />\r\n    if (link === '/my-pokemon-list') return <FaUser />\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"footer sticky\">\r\n      {route.map((item, index) => (\r\n        <div\r\n          role=\"button\"\r\n          aria-hidden=\"true\"\r\n          key={String(index)}\r\n          onClick={() => goTo(item)}\r\n          className={`cp ${page === pageVal[item] ? 'active-route' : ''}`}\r\n        >\r\n          <Logo link={item} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\nimport { Route, BrowserRouter as Router } from 'react-router-dom'\nimport PokemonList from './PokemonList'\nimport PokemonDetail from './PokemonDetail'\nimport MyPokemonList from './MyPokemonList'\nimport CatchPokemon from './CatchPokemon'\nimport Header from './Header'\nimport Footer from './Footer'\nimport '../styles/pokemon.css'\nimport '../styles/pokemonColor.css'\nimport '../styles/pokemonBackgroundColor.css'\n\nconst App = () => {\n  const routes = [\n    { path: '/', name: 'Home', Component: PokemonList },\n    {\n      path: '/pokemon-detail',\n      name: 'Pokemon Detail',\n      Component: PokemonDetail,\n    },\n    { path: '/my-pokemon-list', name: 'My Pokemon', Component: MyPokemonList },\n    { path: '/catch-pokemon', name: 'Catch Pokemon', Component: CatchPokemon },\n  ]\n  return (\n    <Router>\n      <div className=\"flex-column main-wrapper\">\n        <Header />\n        {routes.map(({ path, Component }) => (\n          <Route key={path} exact path={path}>\n            <Component />\n          </Route>\n        ))}\n        <Footer />\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport './styles/index.css'\nimport {\n  ApolloProvider,\n  ApolloClient,\n  createHttpLink,\n  InMemoryCache,\n} from '@apollo/client'\nimport { BrowserRouter } from 'react-router-dom'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { store, persistor } from './store/store'\nimport App from './components/App'\nimport reportWebVitals from './reportWebVitals'\n\nconst httpLink = createHttpLink({\n  uri: 'https://graphql-pokeapi.vercel.app/api/graphql',\n})\n\nconst client = new ApolloClient({\n  link: httpLink,\n  cache: new InMemoryCache(),\n})\n\nReactDOM.render(\n  <BrowserRouter>\n    <ApolloProvider client={client}>\n      <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <App />\n        </PersistGate>\n      </Provider>\n    </ApolloProvider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}